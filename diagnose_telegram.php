<?php
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞
 */

require_once __DIR__ . '/vendor/autoload.php';

// –ó–∞–≥—Ä—É–∂–∞–µ–º Laravel
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –±–æ—Ç–∞\n";
echo "=====================================\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:\n";
echo "APP_ENV: " . config('app.env') . "\n";
echo "APP_URL: " . config('app.url') . "\n";
echo "TELEGRAM_BOT_TOKEN: " . substr(config('services.telegram.bot_token'), 0, 10) . "...\n";
echo "TELEGRAM_BOT_USERNAME: " . config('services.telegram.bot_username') . "\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
echo "üîó –ú–∞—Ä—à—Ä—É—Ç—ã:\n";
$loginRoute = route('telegram.login');
echo "telegram.login: " . $loginRoute . "\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—É–¥–µ—Ç –≤ HTML
echo "üìù HTML –∫–æ–¥ –¥–ª—è Telegram Widget:\n";
$botUsername = config('services.telegram.bot_username');
$authUrl = route('telegram.login');

echo '<script async src="https://telegram.org/js/telegram-widget.js?22"' . "\n";
echo '        data-telegram-login="' . $botUsername . '"' . "\n";
echo '        data-size="large"' . "\n";
echo '        data-auth-url="' . $authUrl . '"' . "\n";
echo '        data-request-access="write">' . "\n";
echo '</script>' . "\n\n";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API Telegram
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API Telegram:\n";

function makeRequest($method, $params = []) {
    $botToken = config('services.telegram.bot_token');
    $url = "https://api.telegram.org/bot{$botToken}/{$method}";
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($params));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json'
    ]);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($httpCode !== 200) {
        return ['ok' => false, 'error' => "HTTP $httpCode", 'response' => $response];
    }
    
    return json_decode($response, true);
}

$meResponse = makeRequest('getMe');
if ($meResponse['ok']) {
    $botInfo = $meResponse['result'];
    echo "‚úÖ –ë–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: @{$botInfo['username']} ({$botInfo['first_name']})\n";
    echo "ID: {$botInfo['id']}\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ username
    if ($botInfo['username'] !== config('services.telegram.bot_username')) {
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: Username –≤ –∫–æ–Ω—Ñ–∏–≥–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º!\n";
        echo "–í –∫–æ–Ω—Ñ–∏–≥–µ: " . config('services.telegram.bot_username') . "\n";
        echo "–†–µ–∞–ª—å–Ω—ã–π: @{$botInfo['username']}\n";
    }
} else {
    echo "‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É: " . json_encode($meResponse) . "\n";
}

echo "\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n";
echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ BotFather –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–æ–º–µ–Ω: " . parse_url(config('app.url'), PHP_URL_HOST) . "\n";
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ username –±–æ—Ç–∞ –≤ .env —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–º—É\n";
echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS —Å –≤–∞–ª–∏–¥–Ω—ã–º SSL\n";
echo "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞\n";
